{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-message-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRouters.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","auth","state","action","type","payload","calendar","map","e","id","filter","ui","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventClearActiveEvent","eventAddNew","event","login","user","startLogout","dispatch","clear","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","console","log","placeholder","onChange","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChage","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","errors","getState","evento","_id","startEventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","eventos","lastView","setlastView","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","startAccessor","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRouters","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAGE,kBAHFA,EAIE,mBAJFA,EAOW,kBAPXA,EASW,sBATXA,EAUM,wBAVNA,EAWQ,qBAXRA,EAYU,uBAZVA,EAaM,uBAbNA,EAcK,sBAdLA,EAiBU,qCAjBVA,EAmBG,eAnBHA,EAsBI,gBCvBXC,EAAe,CACpBC,UAAU,G,QCHLD,EAAe,CACpBE,OAAQ,GACRC,YAAa,MCERH,EAAe,CACpBI,WAAW,GCECC,EAAcC,YAAgB,CAC1CC,KHE0B,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAE5D,OAAQA,EAAOC,MAGd,KAAKX,EACJ,OAAO,uCACHS,GACAC,EAAOE,SAFX,IAGCV,UAAU,IAIZ,KAAKF,EACJ,kCACIS,GADJ,IAECP,UAAU,IAIZ,KAAKF,EACJ,MAAO,CACNE,UAAU,GAIZ,QACC,OAAOO,IG5BTI,SFJ+B,WAAqC,IAAnCJ,EAAkC,uDAA1BR,EAAcS,EAAY,uCAEnE,OAAQA,EAAOC,MAGd,KAAKX,EACJ,sBACIC,GAKL,KAAKD,EACJ,OAAO,2BACHS,GADJ,IAECL,YAAaM,EAAOE,UAItB,KAAKZ,EACJ,OAAO,2BACHS,GADJ,IAECN,OAAM,sBAAOM,EAAMN,QAAb,CAAqBO,EAAOE,YAIpC,KAAKZ,EACJ,OAAO,2BACHS,GADJ,IAECL,YAAc,OAIhB,KAAKJ,EACJ,OAAO,2BACHS,GADJ,IAECN,OAASM,EAAMN,OAAOW,KAAK,SAAAC,GAAC,OAAKA,EAAEC,KAAON,EAAOE,QAAQI,GAAMN,EAAOE,QAAUG,OAIlF,KAAKf,EACJ,OAAO,2BACHS,GADJ,IAECN,OAAQM,EAAMN,OAAOc,QAAO,SAAAF,GAAC,OAAIA,EAAEC,KAAOP,EAAML,YAAYY,MAC5DZ,YAAa,OAIf,KAAKJ,EACJ,OAAO,2BACHS,GADJ,IAECN,OAAO,YAAMO,EAAOE,WAGtB,QACC,OAAOH,IElDTS,GDFwB,WAAqC,IAApCT,EAAmC,uDAA3BR,EAAeS,EAAY,uCAE5D,OAAQA,EAAOC,MAGd,KAAKX,EACJ,OAAO,2BACHS,GADJ,IAECJ,WAAW,IAIb,KAAKL,EACJ,OAAO,2BACHS,GADJ,IAECJ,WAAW,IAGb,QACC,OAAOI,MExBJU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACpBlB,EACAa,EACCM,YAAiBC,O,yDCRbC,EAAUC,8CAWVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEzCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAY,QAATE,EAEKE,MAAMD,GAGNC,MAAMD,EAAK,CACjBD,SACAG,QAAQ,CACP,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAUP,MAgBlBQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEzCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAY,QAATV,EAEKE,MAAMD,EAAM,CAClBD,SACAG,QAAS,CACR,UAAYK,KAMPN,MAAMD,EAAK,CACjBD,SACAG,QAAQ,CACP,eAAgB,mBAChB,UAAWK,GAEZJ,KAAMC,KAAKC,UAAUP,M,iBChEXY,EAAgB,WAAqB,IAAnBxC,EAAkB,uDAAR,GAIxC,OAAOA,EAAOW,KACb,SAACC,GAAD,mBAAC,eACGA,GADJ,IAEC6B,IAAMC,IAAQ9B,EAAE6B,KAAME,SACtBC,MAAOF,IAAO9B,EAAEgC,OAAQD,eCKdE,EAAwB,iBAAO,CAC3CrC,KAAMX,IAWDiD,EAAc,SAACC,GAAD,MAAY,CAC/BvC,KAAMX,EACNY,QAASsC,ICrBJC,EAAQ,SAACC,GAAD,MAAW,CACxBzC,KAAOX,EACPY,QAAUwC,IA+GEC,EAAc,WAC1B,OAAO,SAACC,GACPb,aAAac,QACbD,EDxG0C,CAC3C3C,KAAOX,ICwGNsD,EAhHoB,CACrB3C,KAAMX,M,gBCXMwD,EAAU,WAAwB,IAAvBvD,EAAsB,uDAAP,GAEtC,EAA4BwD,mBAASxD,GAArC,mBAAOyD,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACbD,EAAU1D,IAIL4D,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE5BH,EAAU,2BACND,GADK,kBAEPI,EAAOC,KAAOD,EAAOE,UAKxB,MAAO,CAACN,EAAQG,EAAmBD,I,eCdvBK,EAAc,WAG1B,IAAMX,EAAWY,cAGjB,EAAkDV,EAAQ,CACzDW,OAAQ,gBACRC,UAAW,aAFZ,mBAAOC,EAAP,KAAwBC,EAAxB,KAIQH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAQhB,EAAyDZ,EAAQ,CAChEe,MAAO,cACPC,OAAQ,iBACRC,UAAW,WACXC,WAAY,aAJb,mBAAQC,EAAR,KAA4BC,EAA5B,KAMQJ,EAAyCG,EAAzCH,OAAQD,EAAiCI,EAAjCJ,MAAOE,EAA0BE,EAA1BF,UAAWC,EAAeC,EAAfD,WAalC,OACC,qBAAKG,UAAU,4BAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,wBAAf,UACC,yCACA,uBAAMC,SA/BgB,SAAC/D,GFWF,IAACgE,EAAOC,EEVhCjE,EAAEkE,iBACF3B,GFSyByB,EETLZ,EFSYa,EETJZ,EFW7B,uCAAO,WAAOd,GAAP,2BAAA4B,EAAA,+EAIcrD,EAAc,OAAQ,CAAEkD,QAAOC,YAAY,QAJzD,cAICG,EAJD,gBAKwCA,EAAKC,OAL7C,gBAKGC,EALH,EAKGA,GAAI7C,EALP,EAKOA,MAAO8C,EALd,EAKcA,IAAMvB,EALpB,EAKoBA,KAAMwB,EAL1B,EAK0BA,IAC5BF,GAEF5C,aAAa+C,QAAQ,QAAShD,GAC9BC,aAAa+C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDpC,EAAUH,EAAM,CAAEmC,MAAKvB,WAIvB4B,IAAKC,KAAK,QAASL,EAAK,SAdpB,kDAqBLI,IAAKC,KAAK,QAAS,+BAAiC,SACpDC,QAAQC,IAAR,MAtBK,0DAAP,yDEkBI,UACC,qBAAKjB,UAAU,aAAf,SACC,uBACClE,KAAK,OACLkE,UAAU,eACVkB,YAAY,SACZhC,KAAK,SACLC,MAAOG,EACP6B,SAAU1B,MAIZ,qBAAKO,UAAU,aAAf,SACC,uBACClE,KAAK,WACLkE,UAAU,eACVkB,YAAY,gBACZhC,KAAK,YACLC,MAAOI,EACP4B,SAAU1B,MAGZ,qBAAKO,UAAU,aAAf,SACC,uBACClE,KAAK,SACLkE,UAAU,YACVb,MAAM,kBAMV,sBAAKa,UAAU,wBAAf,UACC,0CACA,uBAAMC,SAnDmB,SAAC/D,GAG7B,GAFAA,EAAEkE,iBAEER,IAAcC,EACjB,OAAOiB,IAAKC,KAAK,QAAS,kCAAgC,SFyBhC,IAAE7B,EAAMgB,EAAOC,EEtB1C1B,GFsB6BS,EEtBJQ,EFsBUQ,EEtBHP,EFsBUQ,EEtBFP,EFuBzC,uCAAO,WAAOnB,GAAP,iBAAA4B,EAAA,+EAIcrD,EAAc,WAAY,CAACkC,OAAMgB,QAAOC,YAAY,QAJlE,cAICG,EAJD,gBAKcA,EAAKC,OALnB,QAKChD,EALD,QAOIiD,IACR5C,aAAa+C,QAAQ,QAASpD,EAAKI,OACnCC,aAAa+C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAO,CAAEmC,IAAKlD,EAAKkD,IAAKvB,KAAO3B,EAAK2B,SAG7C4B,IAAKC,KAAK,QAASxD,EAAKmD,IAAK,SAdzB,kDAoBLM,QAAQC,IAAR,MApBK,0DAAP,yDEqBI,UACC,qBAAKjB,UAAU,aAAf,SACC,uBACClE,KAAK,OACLkE,UAAU,eACVkB,YAAY,SACZhC,KAAK,QACLC,MAAOO,EACPyB,SAAWpB,MAGb,qBAAKC,UAAU,aAAf,SACC,uBACClE,KAAK,QACLkE,UAAU,eACVkB,YAAY,SACZhC,KAAK,SACLC,MAAOQ,EACPwB,SAAUpB,MAGZ,qBAAKC,UAAU,aAAf,SACC,uBACClE,KAAK,WACLkE,UAAU,eACVkB,YAAY,gBACZhC,KAAK,YACLC,MAAOS,EACPuB,SAAUpB,MAKZ,qBAAKC,UAAU,aAAf,SACC,uBACClE,KAAK,WACLkE,UAAU,eACVkB,YAAY,0BACZhC,KAAK,aACLC,MAAOU,EACPsB,SAAUpB,MAIZ,qBAAKC,UAAU,aAAf,SACC,uBACClE,KAAK,SACLkE,UAAU,YACVb,MAAM,+B,QC9HDiC,EAAS,WAErB,IAAOlC,EAAQmC,aAAY,SAAAzF,GAAK,OAAIA,EAAMD,QAAnCuD,KACDT,EAAWY,cAOjB,OACC,sBAAKW,UAAU,kCAAf,UACC,sBAAMA,UAAU,eAAhB,SACEd,IAGF,yBACCc,UAAU,yBACVsB,QAbuB,WAEzB7C,EAAUD,MAST,UAKC,mBAAGwB,UAAU,wBACb,sBAAMA,UAAU,OAAhB,2BC3BSuB,EAAW,CACvBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACN5D,MAAO,SACP6D,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXHC,GAAgB,SAAC,GAAe,IAAbhE,EAAY,EAAZA,MAEvBiE,EAAejE,EAAfiE,MAAO/D,EAAQF,EAARE,KACf,OACC,gCACC,+BAAO+D,IACP,wCAAW/D,EAAKW,KAAhB,W,wCCDUqD,GAAc,iBAAO,CAAEzG,KAAMX,ICMpCqH,GAAe,CACpBC,QAAS,CACRC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGbC,KAAMC,cAAc,SACpB,IAAMC,GAAMlF,MAASmF,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAiBJ,GAAIK,QAAQF,IAAI,EAAG,SAEpCG,GAAY,CAAElB,MAAO,GAAImB,MAAO,GAAIvF,MAAOgF,GAAIjF,SAAUF,IAAKuF,GAAerF,UAItEyF,GAAgB,WAG5B,IAAQlI,EAAc6F,aAAY,SAAAzF,GAAK,OAAIA,EAAMS,MAAzCb,UACAD,EAAgB8F,aAAY,SAAAzF,GAAK,OAAIA,EAAMI,YAA3CT,YACFkD,EAAWY,cAIjB,EAAkCT,mBAASsE,GAAIjF,UAA/C,mBAAO0F,EAAP,KAAkBC,EAAlB,KACA,EAA8BhF,mBAAS0E,GAAerF,UAAtD,mBAAO4F,EAAP,KAAgBC,EAAhB,KACA,EAAoClF,oBAAS,GAA7C,mBAAOmF,EAAP,KAAmBC,EAAnB,KAGA,EAAoCpF,mBAAS4E,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACS5B,EAAgC2B,EAAhC3B,MAAQmB,EAAwBQ,EAAxBR,MAAQvF,EAAgB+F,EAAhB/F,MAAQH,EAAQkG,EAARlG,IAGjCoG,qBAAU,WAERD,EADE3I,GAKYiI,MAEb,CAACjI,EAAa2I,IAGjB,IAAME,EAAmB,SAAC,GAAgB,IAAdnF,EAAa,EAAbA,OAC3BiF,EAAc,2BAAKD,GAAN,kBAAmBhF,EAAOC,KAAQD,EAAOE,UAIjDkF,EAAa,WAElB5F,ED1DiC,CAAE3C,KAAMX,IC2DzCsD,EAAUN,KACV+F,EAAcV,KAiDf,OAEC,eAAC,KAAD,CACCc,OAAS9I,EACT+I,eAAgBF,EAChBG,MAAOhC,GACPiC,eAAgB,IAChBzE,UAAU,QACV0E,iBAAiB,cANlB,UASC,mCAAOnJ,EAAc,kBAAoB,eAAzC,OACA,uBACA,uBAAMyE,UAAU,YAAYC,SA7CP,SAAC/D,GACvBA,EAAEkE,iBAEF,IAAMuE,EAAc3G,IAAOE,GACrB0G,EAAY5G,IAAOD,GAEzB,GAAI4G,EAAYE,cAAcD,GAC7B9D,IAAKC,KAAK,QAAS,mDAAoD,aADxE,CAKA,GAAIuB,EAAMwC,OAAOC,OAAS,EACzB,OAAOf,GAAc,GRoBQ,IAAC3F,EQb9BI,EAHElD,GRgB4B8C,EQbJ4F,ERc5B,uCAAO,WAAOxF,GAAP,iBAAA4B,EAAA,+EAGc3C,EAAc,UAAD,OAAWW,EAAMlC,IAAMkC,EAAO,OAHzD,cAGCiC,EAHD,gBAIcA,EAAKC,OAJnB,QAIChD,EAJD,QAOGiD,IACP/B,EA/FqC,CACxC3C,KAAOX,EACPY,QA6F0BsC,IACvByC,IAAKC,KAAK,QAAS,oBAAqB,YAGxCD,IAAKC,KAAK,QAASxD,EAAKyH,OAAOA,OAAO,GAAGtE,IAAK,SAZ1C,kDAiBLM,QAAQC,IAAR,MAjBK,0DAAP,uDA1D+B,SAAC5C,GAChC,8CAAO,WAAOI,EAAUwG,GAAjB,uBAAA5E,EAAA,+DAEgB4E,IAAWtJ,KAAzB8E,EAFF,EAEEA,IAAKvB,EAFP,EAEOA,KAFP,kBAMcxB,EAAc,SAAUW,EAAO,QAN7C,cAMCiC,EAND,gBAOcA,EAAKC,OAPnB,QAOChD,EAPD,QASGiD,KACPnC,EAAMlC,GAAKoB,EAAK2H,OAAO/I,GACvBkC,EAAME,KAAO,CACZ4G,IAAM1E,EACNvB,KAAMA,GAGPT,EAASL,EAAaC,KAhBlB,kDAqBL2C,QAAQC,IAAR,MArBK,0DAAP,wDQgDWmE,CAAkBnB,IAG5BD,GAAc,GACdK,MAiBC,UAEC,sBAAKrE,UAAU,aAAf,UACC,wDACA,cAAC,KAAD,CACCmB,SA9DyB,SAACjF,GAC9B0H,EAAa1H,GACbgI,EAAc,2BAAKD,GAAN,IAAkB/F,MAAOhC,MA6DlCiD,MAAOwE,EACP3D,UAAU,oBAKZ,sBAAKA,UAAU,aAAf,UACC,qDACA,cAAC,KAAD,CACCmB,SAlEiB,SAACjF,GACtB4H,EAAW5H,GACXgI,EAAc,2BAAKD,GAAN,IAAkBlG,IAAK7B,MAiEhCmJ,QAAS1B,EACTxE,MAAO0E,EACP7D,UAAU,oBAIZ,uBACA,sBAAKA,UAAU,aAAf,UACC,mDACA,uBACClE,KAAK,OACLkE,UAAS,wBAAoB+D,GAAc,cAC3C7C,YAAY,uBACZhC,KAAK,QACLoG,aAAa,MACbnE,SAAWiD,EACXjF,MAAOmD,IAER,uBAAOnG,GAAG,YAAY6D,UAAU,uBAAhC,yCAGD,sBAAKA,UAAU,aAAf,UACC,0BACClE,KAAK,OACLkE,UAAU,eACVkB,YAAY,QACZqE,KAAK,IACLrG,KAAK,QACLiC,SAAWiD,EACXjF,MAAOsE,IAER,uBAAOtH,GAAG,YAAY6D,UAAU,uBAAhC,yCAGD,yBACClE,KAAK,SACLkE,UAAU,oCAFX,UAIC,mBAAGA,UAAU,gBACb,sDCpLQwF,I,cAAY,WAExB,IAAM/G,EAAWY,cAMjB,OAEC,wBACCiC,QAPsB,WACvB7C,EAAU8D,OAOTvC,UAAU,sBAFX,SAIC,mBAAGA,UAAU,oBCfHyF,GAAiB,WAE7B,IAAMhH,EAAWY,cAQjB,OACC,wBACCiC,QAPwB,WACzB7C,EVyID,uCAAO,WAAOA,EAAUwG,GAAjB,mBAAA5E,EAAA,6DAEElE,EAAO8I,IAAWjJ,SAAST,YAA3BY,GAFF,kBAMcuB,EAAc,UAAD,OAAWvB,GAAM,GAAK,UANjD,cAMCmE,EAND,gBAOcA,EAAKC,OAPnB,QAOChD,EAPD,QAUIiD,IACR/B,EA1HwB,CAC3B3C,KAAMX,IA0HH2F,IAAKC,KAAK,QAAS,iBAAkB,YAGrCD,IAAKC,KAAK,QAASxD,EAAKyH,OAAOA,OAAO,GAAGtE,IAAK,SAf1C,kDAoBLM,QAAQC,IAAR,MApBK,0DAAP,0DUlIEjB,UAAU,4BAFX,SAIC,mBAAGA,UAAU,oBCLhBhC,IAAO0H,OAAO,MACd,IAAMC,GAAYC,YAAgB5H,KAGrB6H,GAAiB,WAG7B,IAAMpH,EAAWY,cACjB,EAA8BgC,aAAY,SAAAzF,GAAK,OAAIA,EAAMI,YAAlDV,EAAP,EAAOA,OAAQC,EAAf,EAAeA,YACRkF,EAAOY,aAAY,SAAAzF,GAAK,OAAIA,EAAMD,QAAlC8E,IAIP0D,qBAAU,WACT1F,EXmED,uCAAO,WAAQA,GAAR,mBAAA4B,EAAA,+EAGc3C,EAAc,UAH5B,cAGC4C,EAHD,gBAIcA,EAAKC,OAJnB,OAIChD,EAJD,OAMCjC,EAASwC,EAAeP,EAAKuI,SAEnCrH,EA9D8B,CAChC3C,KAAOX,EACPY,QA4DyBT,IARlB,kDAWL0F,QAAQC,IAAR,MAXK,0DAAP,yDWlEG,CAACxC,IAKJ,MAAgCG,mBAAShB,aAAaC,QAAQ,aAAe,SAA7E,mBAAOkI,EAAP,KAAiBC,EAAjB,KA0CA,OACC,sBAAKhG,UAAU,kBAAf,UACC,cAAC,EAAD,IACA,cAAC,IAAD,CACCiG,YAAY,MACZ3K,OAASA,EACT4K,gBAtBwB,SAAC7H,EAAOH,EAAMH,EAAKoI,GAW7C,MAAO,CACN3B,MATa,CACb4B,gBAAkB3F,IAAQpC,EAAME,KAAK4G,IAAO,UAAY,UACxDkB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAeNjF,SAAWA,EACXoE,UAAYA,GACZc,cAAc,QACdC,mBAjDmB,WACrBjI,EAAU8D,OAiDRoE,cA7CmB,SAACzK,GACtBuC,EXlCwC,CACzC3C,KAAMX,EACNY,QWgC0BG,KA6CvB0K,aAnCkB,SAAC1K,GAErBuC,EAAUN,MAkCR0I,YAAY,EACZC,OA3CkB,SAAC5K,GACrB8J,EAAa9J,GACb0B,aAAa+C,QAAQ,WAAYzE,IA0C/B6K,KAAMhB,EACNiB,WAAY,CACX3I,MAAQgE,MAIV,cAAC,GAAD,IACE9G,GAAe,cAAC,GAAD,IACjB,cAAC,GAAD,Q,4CCxFU0L,GAAc,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,gBAA4BC,EAAyB,EAApCC,UAAyBC,EAAW,mBAClF,OACC,cAAC,IAAD,2BACKA,GADL,IAECD,UAAW,SAACE,GAAD,OACTJ,EACG,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAeG,S,mCCJVE,GAAiB,SAAC,GAAyD,IAAvDN,EAAsD,EAAtDA,gBAA4BC,EAA0B,EAApCC,UAAwBC,EAAY,mBAGtF,OACC,cAAC,IAAD,2BAAYA,GAAZ,IAAkBD,UAAY,SAACE,GAAD,OAC3BJ,EACG,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCPRE,GAAY,WAExB,MAA0BpG,aAAY,SAAAzF,GAAK,OAAIA,EAAMD,QAA7CN,EAAR,EAAQA,SAAUoF,EAAlB,EAAkBA,IACZhC,EAAWY,cAOjB,OAJA8E,qBAAU,WACT1F,EbqED,uCAAO,WAAQA,GAAR,iBAAA4B,EAAA,+EAKc3C,EAAc,cAL5B,cAKC4C,EALD,gBAMcA,EAAKC,OANnB,QAMChD,EAND,QAQIiD,IACR5C,aAAa+C,QAAQ,QAASpD,EAAKI,OACnCC,aAAa+C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CAAEmC,IAAKlD,EAAKkD,IAAKvB,KAAM3B,EAAK2B,SAI3CT,EA1F0B,CAC7B3C,KAAMX,IAyEC,kDAuBL6F,QAAQC,IAAR,MAvBK,0DAAP,yDapEG,CAACxC,IAEDpD,EACM,oBAAI2E,UAAU,sBAAd,yBAIR,cAAC,IAAD,UACC,8BACC,eAAC,IAAD,WAEC,cAAC,GAAD,CACC0H,OAAK,EACLC,KAAK,SACLT,kBAAoBzG,EACpB2G,UAAYhI,IAGb,cAAC,GAAD,CACCsI,OAAK,EACLC,KAAK,IACLT,kBAAoBzG,EACpB2G,UAAYvB,KAGb,cAAC,IAAD,CACC0B,GAAG,mBCpCMK,GARK,WACnB,OACC,cAAC,IAAD,CAAWlL,MAAQA,EAAnB,SACC,cAAC,GAAD,O,OCFHmL,IAASC,OAAQ,cAAC,GAAD,IAAiBC,SAASC,eAAe,U","file":"static/js/main.97179733.chunk.js","sourcesContent":["/**\r\n * Mis types para mis diferentes reducers\r\n * \r\n */\r\n\r\nexport const types = {\r\n\r\n\t//* Types for uiRecuder(windon Modal)\r\n\tuiOpenModal:  '[ui] Open Modal',\r\n\tuiCloseModal: '[ui] Close Modal',\r\n\r\n\t//* Types for calendarReducer\r\n\teventAddNew:           '[event] Add new',\r\n\teventStartAddNew:      '[event] Start Add new',\r\n\teventClearActiveEvent: '[event] Clear Event',\r\n\teventDeleted:\t\t   '[event] Event Deleted',\r\n\teventSetActive: \t   '[event] Set Active',\r\n\teventUpdateEvent: \t   '[event] Event Update',\r\n\teventLoaded: \t\t   '[event] Event loaded',\r\n\teventClear:\t\t\t   '[event] Event Clear',\r\n\r\n\t//* Types for authReducer \r\n\tauthCheckingFinish : \t'[auth] Finish Checking login state',\r\n\tauthStartLogin : \t\t'[auth] Start login',\r\n\tauthLogin : \t\t\t'[auth] Login',\r\n\tauthStartRegister : \t'[auth] Start Register',\r\n\tauthStartTokenRenew : \t'[auth] Start token renew',\r\n\tauthLogout : \t\t\t'[auth] Logout',\r\n\r\n\r\n} ","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n\tchecking: true,\r\n\t// uid: null,\r\n\t// name : null\r\n\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\t// Setea el state del user en el store\r\n\t\tcase types.authLogin:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tchecking: false\r\n\t\t\t};\r\n\t\t\r\n\t\t// Saber si la session del user esta activa\r\n\t\tcase types.authCheckingFinish : \r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tchecking: false\r\n\t\t\t}\r\n\r\n\t\t// Cerra la session\r\n\t\tcase types.authLogout:\r\n\t\t\treturn {\r\n\t\t\t\tchecking: false\r\n\t\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\tevents: [],\r\n\tactiveEvent: null\r\n}\r\n\r\nexport const calendarReducer  = ( state = initialState, action ) => {\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\t// Limpia el state al hacer logout\r\n\t\tcase types.eventClear:\r\n\t\t\treturn{ \r\n\t\t\t\t...initialState\r\n\t\t\t}\r\n\r\n\r\n\t\t// Setear Evento\r\n\t\tcase types.eventSetActive:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveEvent: action.payload\r\n\t\t\t}\r\n\r\n\t\t// Add new Event\r\n\t\tcase types.eventAddNew:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents : [...state.events, action.payload]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t// Clearing event active\r\n\t\tcase types.eventClearActiveEvent:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveEvent : null\r\n\t\t\t}\r\n\r\n\t\t// Update event \r\n\t\tcase types.eventUpdateEvent:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents : state.events.map( e => (e.id === action.payload.id) ? action.payload : e )\r\n\t\t\t}\r\n\r\n\t\t// Elimina un evento del sate\r\n\t\tcase types.eventDeleted:\t\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: state.events.filter(e => e.id !== state.activeEvent.id  ),\r\n\t\t\t\tactiveEvent: null\r\n\t\t\t}\r\n\r\n\t\t// Carga los eventos de la base de datos.\r\n\t\tcase types.eventLoaded:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: [ ...action.payload ]\r\n\t\t\t}\t\t\t\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n\r\n}\r\n","/**\r\n * Este reducer se encarga de \r\n * mostar o ocultar la venta Modal(Esta ventana se ocupa para crear un nuevo evento en mi calendario)\r\n * \r\n */\r\nimport { types } from '../types/types';\r\nconst initialState = { \r\n\tmodalOpen: false \r\n}\r\n\r\nexport const uiReducer = (state = initialState , action ) => {\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\t// Abir la ventada modal\r\n\t\tcase types.uiOpenModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalOpen: true\r\n\t\t\t}\r\n\r\n\t\t// Cerrar la venta modal\r\n\t\tcase types.uiCloseModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalOpen: false\r\n\t\t\t}\r\n\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t\t\t\r\n\t}\r\n\r\n}\r\n\r\n","/**\r\n * Aqui vamos a contener todos los reducer de mi App\r\n */\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n\tauth : authReducer,\r\n\tcalendar : calendarReducer,\r\n\tui : uiReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n// Esto solo es para que podamos usar las redux-devtools del navegador.\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// Este es el store de mi aplicacion.\r\nexport const store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers( \r\n\t\tapplyMiddleware( thunk )\r\n\t)\r\n);\r\n\r\n","/**\r\n * Saber si estoy en modo production o dev\r\n */\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n/**\r\n * Esta funcion se encarga de hacer peticicones a los diferentes endpoint que no necesitan token de autentificacion.\r\n * \r\n * @param {String} endpoint Es el Endpoint para saber a que ruta hacer la peticion.\r\n * @param {String} data Es la data que se va inviar al por el body al endpoin defenido\r\n * @param {String} method El metodo http que ocupa la peticion\r\n * @returns Retorna el llamado de la api pero solo el llamado el resultado del la peticon se soluciona donde se llame esta funcion\r\n */\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n   \r\n\tif(method==='GET'){\r\n\r\n\t\treturn fetch(url);\r\n\r\n\t}else{\r\n\t\treturn fetch(url, { \r\n\t\t\tmethod,\r\n\t\t\theaders:{\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Esta funcion se encarga de hacer peticicones a los diferentes endpoint  de la api \r\n * que necesitan el token de autentificacion.\r\n * \r\n * @param {String} endpoint Es el Endpoint para saber a que ruta hacer la peticion.\r\n * @param {String} data Es la data que se va inviar al por el body al endpoin defenido\r\n * @param {String} method El metodo http que ocupa la peticion\r\n * @returns Retorna el llamado de la api pero solo el llamado el resultado del la peticon se soluciona donde se llame esta funcion\r\n */\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n\tconst token = localStorage.getItem('token') || '';\r\n   \r\n\tif(method==='GET'){\r\n\r\n\t\treturn fetch(url , {\r\n\t\t\tmethod,\r\n\t\t\theaders: {\r\n\t\t\t\t'x-token' : token\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}else{\r\n\t\treturn fetch(url, { \r\n\t\t\tmethod,\r\n\t\t\theaders:{\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-token': token\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n\tfetchConToken,\r\n\tfetchSinToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events  = [] ) => {\r\n\r\n\t// console.log(events)\r\n\t\r\n\treturn events.map( \r\n\t\t(e) => ({\r\n\t\t\t...e,\r\n\t\t\tend : moment( e.end ).toDate(),\r\n\t\t\tstart: moment(e.start ).toDate()\r\n\t\t})\r\n\t)\r\n\r\n}","/**\r\n * Acciones a mi calendarReducer\r\n */\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n\ttype: types.eventSetActive,\r\n\tpayload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n\ttype: types.eventClearActiveEvent\r\n});\r\n\r\n\r\nexport const eventClearStateLogout = () => ({\r\n\ttype : types.eventClear\r\n})\r\n\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n\ttype: types.eventAddNew,\r\n\tpayload: event\r\n})\r\n\r\nconst eventUpdated = ( activeEvent ) => ({\r\n\ttype : types.eventUpdateEvent,\r\n\tpayload: activeEvent\r\n})\r\n\r\nconst eventDeleted = () => ({\r\n\ttype: types.eventDeleted\r\n});\r\n\r\n\r\nconst eventsLoaded = (event) => ({\r\n\ttype : types.eventLoaded,\r\n\tpayload : event\r\n})\r\n\r\n\r\n/*------------------------------------------------\r\n|\t\tAcciones Asincronas contra la database\r\n---------------------------------------------------*/ \r\n\r\n/**\r\n * Esta accion se encarga de hacer la peticion a la api\r\n * para guadar un nuevo evento y si no hubo un error al gudarlo\r\n * actualiza el store agregado al state del calendarReducer,\r\n * el nuevo evento creado.\r\n * \r\n * @param {Object} event El evento a guardar en la DDBB\r\n * @returns {[void]} Actuliza el store \r\n */\r\nexport const startEventAddNew = (event) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\t\r\n\t\tconst { uid, name } = getState().auth;\r\n\r\n\t\ttry{\r\n\r\n\t\t\tconst resp = await fetchConToken('events', event, 'POST');\r\n\t\t\tconst body = await resp.json();\r\n\t\t\t\r\n\t\t\tif(body.ok){\r\n\t\t\t\tevent.id = body.evento.id;\r\n\t\t\t\tevent.user = {  \r\n\t\t\t\t\t_id : uid,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdispatch(eventAddNew( event ) );\r\n\t\t\t}\r\n\r\n\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Se encarga de traer todos los evento de la base de datos\r\n * para iterarlos en el componente <calendarScreen/>.\r\n * \r\n * @returns {Array} Retorna un array de objetos\r\n */ \r\nexport const eventStartLoading = () => {\r\n\treturn async ( dispatch ) => {\r\n\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken('events');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tconst events = prepareEvents( body.eventos );\r\n\t\t\t\r\n\t\t\tdispatch( eventsLoaded(events) ) \r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Esta accion se encarga de actulizar un evento \r\n * \r\n * @param {Object} event El evento a actulizar\r\n * @returns Cambia el state de mi calendarReducer\r\n */\r\nexport const startUpdateEvent = (event) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry{\r\n\r\n\t\t\tconst resp = await fetchConToken(`events/${event.id}`, event, 'PUT' );\r\n\t\t\tconst body = await resp.json();\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(body.ok){\r\n\t\t\t\tdispatch( eventUpdated(event) );\r\n\t\t\t\tSwal.fire('Error', 'Evento Actulizado', 'success');\r\n\r\n\t\t\t}else{\r\n\t\t\t\tSwal.fire('Error', body.errors.errors[0].msg, 'error');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Esta accion se encarga de elimiar un eventi\r\n * @param {String} id ID del evento  \r\n */\r\nexport const startEventDelete = () => {\r\n\r\n\treturn async (dispatch, getState) => {\r\n\r\n\t\tconst { id } = getState().calendar.activeEvent;\r\n\r\n\t\ttry{\t\r\n\r\n\t\t\tconst resp = await fetchConToken(`events/${id}`, {} , 'DELETE');\r\n\t\t\tconst body = await resp.json();\r\n\t\t\t\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch(eventDeleted());\r\n\t\t\t\tSwal.fire('Error', 'Evento Elimino', 'success');\r\n\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.errors.errors[0].msg, 'error');\r\n\t\t\t}\r\n\r\n\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventClearStateLogout } from './events';\r\n\r\n/* -------------------------------------------------\r\n|\t\t\tAcciones Sincronas \r\n-----------------------------------------------------*/\r\nconst login = (user) => ({\r\n\ttype : types.authLogin,\r\n\tpayload : user\r\n})\r\n \r\nconst logout = () => ({\r\n\ttype: types.authLogout\r\n})\r\n\r\nconst checkingFinish = () => ({\r\n\ttype: types.authCheckingFinish\r\n\r\n});\r\n\r\n\r\n\r\n/* -------------------------------------------------\r\n|\t\t\tAcciones Asincronas\r\n-----------------------------------------------------*/\r\n\r\n// Hace el login a mi backend y setea la info del user en mi state \r\nexport const startLogin = (email, password) => {\r\n\r\n\treturn async (dispatch) => {\r\n\r\n\t\ttry{\r\n\r\n\t\t\tconst resp = await fetchSinToken('auth', { email, password }, 'POST' );\r\n\t\t\tconst { ok, token, uid , name, msg } = await resp.json();\r\n\t\t\tif(ok){\r\n\r\n\t\t\t\tlocalStorage.setItem('token', token)\r\n\t\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\t\t\t\tdispatch( login({ uid, name }) );\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\tSwal.fire('Error', msg, 'error');\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\r\n\t\t}catch(e){\r\n\r\n\t\t\tSwal.fire('Error', 'Servidores Fuera de servicio' , 'error');\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\n// Registra un nuevo usuario en el backend y setea la info del user en el stateGobal\r\nexport const startRegister = ( name, email, password ) => {\r\n\treturn async (dispatch) => {\r\n\t\t\r\n\t\ttry{\r\n\r\n\t\t\tconst resp = await fetchSinToken('auth/new', {name, email, password }, 'POST');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tlocalStorage.setItem('token', body.token)\r\n\t\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\t\tdispatch(login( { uid: body.uid, name : body.name } ));\r\n\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(e);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// Saber si la session del usuario esta activa\r\nexport const startChecking = () => {\r\n\treturn async ( dispatch ) => {\r\n\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst resp = await fetchConToken('auth/renew');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tlocalStorage.setItem('token', body.token)\r\n\t\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\t\tdispatch(login({ uid: body.uid, name: body.name }));\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdispatch(checkingFinish());\r\n\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport const startLogout = () => {\r\n\treturn (dispatch) => {\r\n\t\tlocalStorage.clear();\r\n\t\tdispatch(eventClearStateLogout() );\r\n\t\tdispatch( logout() );\r\n\t}\r\n}\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n\tconst [values, setValues] = useState(initialState);\r\n\r\n\tconst reset = () => {\r\n\t\tsetValues(initialState);\r\n\t}\r\n\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\r\n\t\tsetValues({\r\n\t\t\t...values,\r\n\t\t\t[target.name]: target.value\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn [values, handleInputChange, reset];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\t// React-Redux\r\n\tconst dispatch = useDispatch();\r\n\r\n\t//TODO :: Auth - Login ( State y dispatch de login )\r\n\tconst [formLoginValues, handleLoginInputChange] = useForm({ \r\n\t\tlEmail: 'test@test.com', \r\n\t\tlPassword: 'passtest' \r\n\t});\r\n\tconst { lEmail, lPassword } = formLoginValues;\r\n\tconst handleLoginSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startLogin(lEmail, lPassword ));\r\n\t}\r\n\r\n\r\n\t//TODO :: Auth - Register ( State y dispatch de login )\r\n\tconst [ formRegisterValues, handleRegisterInputChange] = useForm({ \r\n\t\trName: 'Naya Rivera', \r\n\t\trEmail: 'test3@test.com', \r\n\t\trPassword: 'passtest', \r\n\t\trPassword2: 'passtest'\r\n\t});\r\n\tconst { rEmail, rName, rPassword, rPassword2 } = formRegisterValues;\r\n\tconst handleRegisterSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\r\n\t\tif( rPassword !== rPassword2 ){\r\n\t\t\treturn Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n\t\t}\r\n\r\n\t\tdispatch( startRegister( rName, rEmail, rPassword ) );\r\n\t}\r\n\r\n\r\n\t// JSX.....\r\n\treturn (\r\n\t\t<div className=\"container login-container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6 login-form-1\">\r\n\t\t\t\t\t<h3>Ingreso</h3>\r\n\t\t\t\t\t<form onSubmit={handleLoginSubmit}  >\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Correo\"\r\n\t\t\t\t\t\t\t\tname=\"lEmail\"\r\n\t\t\t\t\t\t\t\tvalue={lEmail}\r\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t\t\t\t\tname=\"lPassword\"\r\n\t\t\t\t\t\t\t\tvalue={lPassword}\r\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Login\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-6 login-form-2\">\r\n\t\t\t\t\t<h3>Registro</h3>\r\n\t\t\t\t\t<form onSubmit={ handleRegisterSubmit } >\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Nombre\"\r\n\t\t\t\t\t\t\t\tname=\"rName\"\r\n\t\t\t\t\t\t\t\tvalue={rName}\r\n\t\t\t\t\t\t\t\tonChange={ handleRegisterInputChange }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Correo\"\r\n\t\t\t\t\t\t\t\tname=\"rEmail\"\r\n\t\t\t\t\t\t\t\tvalue={rEmail}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t\t\t\t\tname=\"rPassword\"\r\n\t\t\t\t\t\t\t\tvalue={rPassword}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Repita la contraseña\"\r\n\t\t\t\t\t\t\t\tname=\"rPassword2\"\r\n\t\t\t\t\t\t\t\tvalue={rPassword2}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Crear cuenta\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n \r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst {name} = useSelector(state => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLogoutClick = () => {\r\n\r\n\t\tdispatch( startLogout() );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"navbar navbar-dark bg-dark mb-4\" >\r\n\t\t\t<span className=\"navbar-brand\" >\r\n\t\t\t\t{name}\r\n\t\t\t</span>\r\n\r\n\t\t\t<button \r\n\t\t\t\tclassName=\"btn btn-outline-danger\"\r\n\t\t\t\tonClick={ handleLogoutClick }\r\n\t\t\t>\r\n\r\n\t\t\t\t<i className=\"fas fa-sign-out-alt\"></i>\r\n\t\t\t\t<span className=\"ml-1\">Logout</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export const messages = {\r\n\tallDay: 'Todo el día',\r\n\tprevious: '<',\r\n\tnext: '>',\r\n\ttoday: 'Hoy',\r\n\tmonth: 'Mes',\r\n\tweek: 'Semana',\r\n\tday: 'Día',\r\n\tagenda: 'Agenda',\r\n\tdate: 'Fecha',\r\n\ttime: 'Hora',\r\n\tevent: 'Evento',\r\n\tnoEventsInRange: 'No hay eventos en este rango',\r\n\tshowMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n\tconst { title, user} = event;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span>{title}</span>\r\n\t\t\t<strong>- {user.name} </strong>\r\n\t\t</div>\r\n\t)\r\n}\r\n","/**\r\n * Acciones Sincronas A mi uiReducer.\r\n */\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { \r\n\teventClearActiveEvent,\r\n\tstartEventAddNew, \r\n\tstartUpdateEvent \r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n\tcontent: {\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tright: 'auto',\r\n\t\tbottom: 'auto',\r\n\t\tmarginRight: '-50%',\r\n\t\ttransform: 'translate(-50%, -50%)'\r\n\t}\r\n};\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // Fecha y hora actual\r\nconst nowPlusOneHour = now.clone().add(1, 'hours') // Fecha y hora actual mas una ora\r\n\r\nconst initEvent = { title: '', notes: '', start: now.toDate(), end: nowPlusOneHour.toDate() }\r\n\r\n\r\n//*.... JSX ...*//\r\nexport const CalendarModal = () => {\r\n\r\n\t// react-redux\r\n\tconst { modalOpen } = useSelector(state => state.ui);\r\n\tconst { activeEvent } = useSelector(state => state.calendar);\r\n\tconst dispatch = useDispatch();\r\n\r\n\r\n\t// State para controlar la info de los input de tipo fecha\r\n\tconst [dateStart, setDateStart] = useState(now.toDate())\r\n\tconst [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate());\r\n\tconst [titleValid, setTitleValid] = useState(true)\r\n\r\n\t// State para la data del formulario\r\n\tconst [formValues, setFormValues] = useState(initEvent);\r\n\tconst {  title,  notes,  start,  end } = formValues;\r\n\r\n\t// Este efecto es para mostar la info del evento seleccionado en el formulario\r\n\tuseEffect(() => {\r\n\t\tif(activeEvent){\r\n\t\t\tsetFormValues(activeEvent)\r\n\r\n\t\t}else{\r\n\r\n\t\t\tsetFormValues(initEvent)\r\n\t\t}\r\n\t}, [activeEvent, setFormValues])\r\n\r\n\t// Obtener lo values de los campos del form\r\n\tconst handleInputChage = ({ target }) => {\r\n\t\tsetFormValues({ ...formValues, [target.name] : target.value  });\r\n\t}\r\n\r\n\r\n\tconst closeModal = () => {\r\n\t\t// TODO:: CERRAR EN MODAL\r\n\t\tdispatch( uiCloseModal() );\r\n\t\tdispatch( eventClearActiveEvent() );\r\n\t\tsetFormValues(initEvent);\r\n\r\n\t}\r\n\r\n\t// Setear Hora de inicio del evento\r\n\tconst handleStartDateChange = (e) => {\r\n\t\tsetDateStart(e);\r\n\t\tsetFormValues({ ...formValues, start: e });\r\n\t}\r\n\r\n\t// Seter Fin de la fecha del evento\r\n\tconst handleDateEnd = (e) => {\r\n\t\tsetDateEnd(e);\r\n\t\tsetFormValues({ ...formValues, end: e });\r\n\t}\r\n\r\n\t// Add new Event an calendar\r\n\tconst handleAddEvent = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst momentStart = moment(start);\r\n\t\tconst momentEnd = moment(end);\r\n\r\n\t\tif (momentStart.isSameOrAfter(momentEnd)) {\r\n\t\t\tSwal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (title.trim().length < 2) {\r\n\t\t\treturn setTitleValid(false);\r\n\t\t}\r\n\r\n\r\n\t\tif(activeEvent) \r\n\t\t{\r\n\t\t\t//TODO :: Actulizar Evento\r\n\t\t\tdispatch(startUpdateEvent(formValues) )\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t//TODO :: Make new event\r\n\t\t\tdispatch(startEventAddNew( formValues ));\r\n\t\t}\r\n\t\t\r\n\t\tsetTitleValid(true);\r\n\t\tcloseModal();\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<Modal\r\n\t\t\tisOpen={ modalOpen } // Abir el modal\r\n\t\t\tonRequestClose={closeModal} // Cierra el modal\r\n\t\t\tstyle={customStyles}\r\n\t\t\tcloseTimeoutMS={200}\r\n\t\t\tclassName=\"modal\"\r\n\t\t\toverlayClassName=\"modal-fondo\"\r\n\t\t>\r\n\r\n\t\t\t<h1> { activeEvent ? 'Editando Evento' : 'Nuevo Evento' } </h1>\r\n\t\t\t<hr />\r\n\t\t\t<form className=\"container\" onSubmit={handleAddEvent} >\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Fecha y hora inicio</label>\r\n\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\tonChange={handleStartDateChange}\r\n\t\t\t\t\t\tvalue={dateStart}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Fecha y hora fin</label>\r\n\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\tonChange={handleDateEnd}\r\n\t\t\t\t\t\tminDate={dateStart}\r\n\t\t\t\t\t\tvalue={dateEnd}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Titulo y notas</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName={ `form-control ${!titleValid && 'is-invalid' }` }\r\n\t\t\t\t\t\tplaceholder=\"Título del evento\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tonChange={ handleInputChage }\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Notas\"\r\n\t\t\t\t\t\trows=\"5\"\r\n\t\t\t\t\t\tname=\"notes\"\r\n\t\t\t\t\t\tonChange={ handleInputChage }\r\n\t\t\t\t\t\tvalue={notes}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"btn btn-outline-primary btn-block\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"far fa-save\"></i>\r\n\t\t\t\t\t<span> Guardar</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t</form>\r\n\t\t</Modal>\r\n\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\n// fab : Float Action Button\r\nexport const AddNewFab = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleOpenModal = ()=>{\r\n\t\tdispatch( uiOpenModal() );\r\n\t}\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<button \r\n\t\t\tonClick={ handleOpenModal }  \r\n\t\t\tclassName=\"btn btn-primary fab\"\r\n\t\t>\r\n\t\t\t<i className=\"fas fa-plus\"></i>\r\n\r\n\t\t</button>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startEventDelete } from '../../actions/events';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\r\n\tconst handleDeleteEvent = () => {\r\n\t\tdispatch(startEventDelete());\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={handleDeleteEvent}\r\n\t\t\tclassName=\"btn btn-danger fab-danger\"\r\n\t\t>\r\n\t\t\t<i className=\"fas fa-trash\" ></i>\r\n\r\n\t\t</button>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-message-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n\t// react-redux\r\n\tconst dispatch = useDispatch();\r\n\tconst {events, activeEvent} = useSelector(state => state.calendar);\r\n\tconst {uid} = useSelector(state => state.auth);\r\n\t\r\n\r\n\t// Obtener registros de la base de datos HACER EL GET...\r\n\tuseEffect(() => {\r\n\t\tdispatch(eventStartLoading() )\r\n\t}, [dispatch])\r\n\r\n\r\n\r\n\t// Obtener la ultima vista donde estuvo el usuario.\r\n\tconst [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month' );\r\n\r\n\t// TODO::Open Modal\r\n\tconst onDoubleClick = () => {\r\n\t\tdispatch( uiOpenModal());\r\n\t}\r\n\r\n\r\n\tconst onSelectEvent = (e) => {\r\n\t\tdispatch( eventSetActive(e) );\r\n\r\n\t}\r\n\r\n\tconst onViewChange = (e) => {\r\n\t\tsetlastView( e );\r\n\t\tlocalStorage.setItem('lastView', e);\r\n\t}\r\n\r\n\r\n\tconst onSelectSlot = (e) => {\r\n\t\t\r\n\t\tdispatch( eventClearActiveEvent()  );\r\n\t}\r\n\r\n\r\n\t// Estilos de los recordatorios \r\n\tconst eventStyleCalendar = (event, start,end, isSelected) => {\r\n\t\r\n\r\n\t\tconst style = {\r\n\t\t\tbackgroundColor: (uid === event.user._id) ? '#6610f2' : '#6c757d',\r\n\t\t\tborderRadius: '0px',\r\n\t\t\topacity: 0.8,\r\n\t\t\tdisplay: 'block',\r\n\t\t\tcolor: 'white'\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstyle\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"calendar-screen\">\r\n\t\t\t<NavBar />\r\n\t\t\t<Calendar\r\n\t\t\t\tendAccessor=\"end\"\r\n\t\t\t\tevents={ events }\r\n\t\t\t\teventPropGetter={ eventStyleCalendar }\r\n\t\t\t\tmessages={ messages }\r\n\t\t\t\tlocalizer={ localizer }\r\n\t\t\t\tstartAccessor=\"start\"\r\n\t\t\t\tonDoubleClickEvent={onDoubleClick}\r\n\t\t\t\tonSelectEvent={ onSelectEvent } // Evento al dar un solo click\r\n\t\t\t\tonSelectSlot={onSelectSlot}\r\n\t\t\t\tselectable={true}\r\n\t\t\t\tonView={ onViewChange }\r\n\t\t\t\tview={lastView}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\tevent : CalendarEvent\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<AddNewFab/>\r\n\t\t\t{ activeEvent && <DeleteEventFab/>}\r\n\t\t\t<CalendarModal/>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n/**\r\n * Esta componente se encarga de cargar las rutas publicas si el usuario esta logueado.\r\n * \r\n * @param {Boolean}  isAuthenticated Es la bandera que define si un usuario esta logueado o no  \r\n * @param {Function} component Es el componente que se rederiza al entrar a un ruta privado\r\n * @param {String}   rest Es el resto que de mi componente como el path el exact etc.\r\n * @returns \r\n */\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest} \r\n\t\t\tcomponent={(props) => (\r\n\t\t\t\t(isAuthenticated)\r\n\t\t\t\t\t? (<Redirect to=\"/\" />)\r\n\t\t\t\t\t: (<Component {...props} />)\r\n\t\t\t)}\r\n\t\t/> \r\n\t)\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n\tisAuthenticated: PropTypes.bool.isRequired,\r\n\tcomponent: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\n\r\n\r\n/**\r\n * Esta componente se encarga de cargar las rutas privadas si el usuario esta logueado.\r\n * \r\n * @param {Boolean}  isAuthenticated Es la bandera que define si un usuario esta logueado o no  \r\n * @param {Function} component Es el componente que se rederiza al entrar a un ruta privado\r\n * @param {String}   rest Es el resto que de mi componente como el path el exact etc.\r\n * @returns \r\n */\r\nexport const PrivateRouters = ({ isAuthenticated,  component:Component, ...rest  }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<Route  {...rest} component={ (props) => (\r\n\t\t\t\t(isAuthenticated) \r\n\t\t\t\t\t? (<Component {...props} /> )\r\n\t\t\t\t\t: (<Redirect to='/login' />)\r\n\t\t\t)}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nPrivateRouters.propTypes = {\r\n\tisAuthenticated: PropTypes.bool.isRequired,\r\n\tcomponent : PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRedirect,\r\n} from 'react-router-dom';\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRouters } from './PrivateRouters';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n\tconst { checking, uid } = useSelector(state => state.auth);\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// Saber si la session del usuario esta activa \r\n\tuseEffect(() => {\r\n\t\tdispatch(startChecking())\r\n\t}, [dispatch]);\r\n\r\n\tif(checking){\r\n\t\treturn (<h3 className=\"alert alert-primary\" > Espere... </h3>);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t<PublicRoute    \r\n\t\t\t\t\t\texact \r\n\t\t\t\t\t\tpath=\"/login\" \r\n\t\t\t\t\t\tisAuthenticated={ !!uid } \r\n\t\t\t\t\t\tcomponent={ LoginScreen } \r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<PrivateRouters \r\n\t\t\t\t\t\texact \r\n\t\t\t\t\t\tpath=\"/\" \r\n\t\t\t\t\t\tisAuthenticated={ !!uid } \r\n\t\t\t\t\t\tcomponent={ CalendarScreen }\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Redirect \r\n\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Switch>\t\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nconst CalendarApp = () => {\r\n\treturn (\r\n\t\t<Provider  store={ store } >\r\n\t\t\t<AppRouter/>\r\n\t\t</Provider>\r\n\t)\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './style.css';\n\n\nReactDOM.render( <CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}